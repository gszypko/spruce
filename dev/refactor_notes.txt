
Functions that need to be split out into EquationSet
evolution.cpp
void PlasmaDomain::applyTimeDerivatives(std::vector<Grid> &grids, const std::vector<Grid> &time_derivatives, double step)
std::vector<Grid> PlasmaDomain::computeTimeDerivatives(const std::vector<Grid> &grids, double visc_coeff)
Grid PlasmaDomain::computeMagneticEnergyTerm()
void PlasmaDomain::computeConstantTerms()
void PlasmaDomain::recomputeDerivedVariables(std::vector<Grid> &grids)
void PlasmaDomain::recomputeTemperature(std::vector<Grid> &grids)
void PlasmaDomain::catchUnderdensity(std::vector<Grid> &grids)
void PlasmaDomain::recomputeDT()


Leave BoundaryConditions inside of PlasmaDomain, include way for EquationSet to categorize quantities (as momenta, thermal energies, fields, etc.)
so that the boundary extrapolations can simply iterate over all of the quantities of a particular type

d_x,d_y and pos_x,pos_y should remain in the PlasmaDomain, not split out
Also leave be_x,be_y as part of the plasmadomain, bi_x,bi_y should be part of EquationSet

Put m_grids into EquationSet

Make a getter for the m_grids, by Enum, by integer, or by name string
Make the Enum and variable names publicly accessible
AND make getters for densities, momenta, energies, etc. (for purposes of boundary conditions)
Make num_variables into a function call